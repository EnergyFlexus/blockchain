#include <iostream>
#include "block.h"

#define BLOCKS_PATH "blocks/"

int main()
{
    block genesis("desc: gen", "data");
    block a(&genesis,"1", "data");
    block b(&a,"123", "data3");
    genesis.writeFile(BLOCKS_PATH);
    a.writeFile(BLOCKS_PATH);
    b.writeFile(BLOCKS_PATH);
    return 0;
}
/*
Общение с другими узлами
Важной функцией узла является — разделение и синхронизация блокчейн с другими узлами. Правила — 
используемые для поддержания синхронизации сети:

Когда узел генерирует новый блок, он транслирует его в сеть
Когда узел подключается к новой одноранговой сети он опирается на последний блок
Когда узел обнаруживает блок, который имеет индекс больший, чем текущий известный блок, 
он либо добавляет блок в его нынешнем состоянии в свою собственную цепь либо поддерживает для заполнения блокчейна.
*/